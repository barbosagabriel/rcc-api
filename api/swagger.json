{
  "swagger": "2.0",
  "info": {
    "description": "Recycling Collection Centers API Information",
    "version": "1.0.0",
    "title": "Recycling Collection Centers API",
    "contact": {
      "name": "Gabriel Barbosa",
      "email": "barbosa.gabriel96@gmail.com"
    }
  },
  "host": "recycling-center-api.herokuapp.com",
  "tags": [
    {
      "name": "Recyclable Items",
      "description": "Retrieve info about the Recyclable Items"
    },
    {
      "name": "Collection Centers",
      "description": "All operations of Collection Centers"
    }
  ],
  "schemes": ["https"],
  "paths": {
    "/recyclable-item": {
      "get": {
        "tags": ["Recyclable Items"],
        "summary": "Finds all Recyclabe Items",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RecyclableItem"
              }
            }
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/collection-center": {
      "get": {
        "tags": ["Collection Centers"],
        "summary": "Finds all Collection Centers",
        "description": "Find Collection Centers using filters",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "header",
            "name": "city",
            "type": "string",
            "description": "Name of the city",
            "required": false
          },
          {
            "in": "header",
            "name": "state",
            "type": "string",
            "description": "Name of the state",
            "required": false
          },
          {
            "in": "header",
            "name": "items",
            "type": "string",
            "description": "Array of integers separated by comma",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CollectionCenter"
              }
            }
          },
          "400": {
            "description": "Invalid request"
          }
        }
      },
      "post": {
        "tags": ["Collection Centers"],
        "summary": "Create a Collection Center",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "name",
            "in": "formData",
            "description": "Collection Center name",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "in": "formData",
            "description": "Collection Center e-mail address",
            "required": true,
            "type": "string"
          },
          {
            "name": "whatsapp",
            "in": "formData",
            "description": "Collection Center whatsapp number",
            "required": true,
            "type": "string"
          },
          {
            "name": "city",
            "in": "formData",
            "description": "Collection Center city",
            "required": true,
            "type": "string"
          },
          {
            "name": "state",
            "in": "formData",
            "description": "Collection Center state",
            "required": true,
            "type": "string"
          },
          {
            "name": "latitude",
            "in": "formData",
            "description": "Collection Center latitude",
            "required": true,
            "type": "number"
          },
          {
            "name": "longitude",
            "in": "formData",
            "description": "Collection Center longitude",
            "required": true,
            "type": "number"
          },
          {
            "name": "image",
            "in": "formData",
            "description": "Collection Center photo",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CollectionCenter"
              }
            }
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/collection-center/{id}": {
      "get": {
        "tags": ["Collection Centers"],
        "summary": "Finds all Collection Centers",
        "description": "Find Collection Centers using filters",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificator of a Collection Center",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CollectionCenter"
            }
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    }
  },
  "definitions": {
    "RecyclableItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "type": "string",
          "example": "Batteries"
        },
        "image_url": {
          "type": "string",
          "example": "Batteries"
        }
      }
    },
    "CollectionCenter": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string",
          "example": "Supermarket X"
        },
        "email": {
          "type": "string",
          "example": "john@doe.com"
        },
        "whatsapp": {
          "type": "string",
          "example": "5531999908971"
        },
        "city": {
          "type": "string",
          "example": "Belo Horizonte"
        },
        "state": {
          "type": "string",
          "example": "MG"
        },
        "latitude": {
          "type": "number",
          "example": 47.32183213
        },
        "longitude": {
          "type": "number",
          "example": -12.98326139216
        }
      }
    }
  }
}
